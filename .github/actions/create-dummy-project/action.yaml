name: Create dummy Poetry project
description: Create a dummy Poetry project to test the install-poetry action

runs:
  using: composite
  steps:
    - run: |
        cat <<EOF > pyproject.toml
        [tool.poetry]
        name = "dummy-project"
        version = "0.1.0"
        description = ""
        authors = ["Tilman Krokotsch <tilman@aisight.de>"]
        
        [tool.poetry.dependencies]
        python = "^3.9"
        mock = { version = "^5.0.2", optional = true }
        
        [tool.poetry.extras]
        mock = ["mock"]
        
        [tool.poetry.dev-dependencies]
        
        [build-system]
        requires = ["poetry-core>=1.0.0"]
        build-backend = "poetry.core.masonry.api"
        EOF
      shell: bash
    - run: |
        cat <<EOF > poetry.lock
        [[package]]
        name = "mock"
        version = "5.0.2"
        description = "Rolling backport of unittest.mock for all Pythons"
        optional = true
        python-versions = ">=3.6"
        files = [
        {file = "mock-5.0.2-py3-none-any.whl", hash = "sha256:0e0bc5ba78b8db3667ad636d964eb963dc97a59f04c6f6214c5f0e4a8f726c56"},
        {file = "mock-5.0.2.tar.gz", hash = "sha256:06f18d7d65b44428202b145a9a36e99c2ee00d1eb992df0caf881d4664377891"},
        ]
        
        [package.extras]
        build = ["blurb", "twine", "wheel"]
        docs = ["sphinx"]
        test = ["pytest", "pytest-cov"]
        
        [extras]
        mock = ["mock"]
        
        [metadata]
        lock-version = "2.0"
        python-versions = "^3.9"
        content-hash = "585a3ddbbd7a0b1b6b66c7da33ecd3d20c26a8a14f6b0d21337296a8c9c70329"
        
        EOF
      shell: bash